"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _l7Utils = require("@antv/l7-utils");
var _BasePostProcessingPass = _interopRequireDefault(require("../BasePostProcessingPass"));
/* babel-plugin-inline-import '../../../../shaders/post-processing/blur.glsl' */
const blur = "varying vec2 v_UV;\n\nuniform sampler2D u_Texture;\n\nuniform vec2 u_ViewportSize: [1.0, 1.0];\nuniform vec2 u_BlurDir: [1.0, 0.0];\n\n// https://github.com/Jam3/glsl-fast-gaussian-blur/blob/master/9.glsl\nvec4 blur9(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.3846153846) * direction;\n  vec2 off2 = vec2(3.2307692308) * direction;\n  color += texture2D(image, uv) * 0.2270270270;\n  color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n  color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n  color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n  color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n  return color;\n}\n\nvoid main() {\n  gl_FragColor = blur9(u_Texture, v_UV, u_ViewportSize, u_BlurDir);\n}";
/* babel-plugin-inline-import '../../../../shaders/post-processing/quad.glsl' */
const quad = "attribute vec2 a_Position;\n\nvarying vec2 v_UV;\n\nvoid main() {\n  v_UV = 0.5 * (a_Position + 1.0);\n  gl_Position = vec4(a_Position, 0., 1.);\n}";
const {
  isNil
} = _l7Utils.lodashUtil;
class BlurVPass extends _BasePostProcessingPass.default {
  setupShaders() {
    this.shaderModuleService.registerModule('blur-pass', {
      vs: quad,
      fs: blur
    });
    const {
      vs,
      fs,
      uniforms
    } = this.shaderModuleService.getModule('blur-pass');
    const {
      width,
      height
    } = this.rendererService.getViewportSize();
    return {
      vs,
      fs,
      uniforms: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, uniforms), {}, {
        u_ViewportSize: [width, height]
      })
    };
  }
  convertOptionsToUniforms(options) {
    const uniforms = {};
    if (!isNil(options.blurRadius)) {
      uniforms.u_BlurDir = [0, options.blurRadius];
    }
    return uniforms;
  }
}
exports.default = BlurVPass;