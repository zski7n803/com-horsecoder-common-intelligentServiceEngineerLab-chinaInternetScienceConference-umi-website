"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createLayerContainer = createLayerContainer;
exports.createSceneContainer = createSceneContainer;
exports.globalConfigService = void 0;
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _FontService = _interopRequireDefault(require("./services/asset/FontService"));
var _IconService = _interopRequireDefault(require("./services/asset/IconService"));
var _CameraService = _interopRequireDefault(require("./services/camera/CameraService"));
var _ControlService = _interopRequireDefault(require("./services/component/ControlService"));
var _MarkerService = _interopRequireDefault(require("./services/component/MarkerService"));
var _PopupService = _interopRequireDefault(require("./services/component/PopupService"));
var _ConfigService = _interopRequireDefault(require("./services/config/ConfigService"));
var _CoordinateSystemService = _interopRequireDefault(require("./services/coordinate/CoordinateSystemService"));
var _DebugService = _interopRequireDefault(require("./services/debug/DebugService"));
var _InteractionService = _interopRequireDefault(require("./services/interaction/InteractionService"));
var _PickingService = _interopRequireDefault(require("./services/interaction/PickingService"));
var _LayerService = _interopRequireDefault(require("./services/layer/LayerService"));
var _StyleAttributeService = _interopRequireDefault(require("./services/layer/StyleAttributeService"));
var _SceneService = _interopRequireDefault(require("./services/scene/SceneService"));
var _ShaderModuleService = _interopRequireDefault(require("./services/shader/ShaderModuleService"));
var _ClearPass = _interopRequireDefault(require("./services/renderer/passes/ClearPass"));
var _MultiPassRenderer = _interopRequireDefault(require("./services/renderer/passes/MultiPassRenderer"));
var _PixelPickingPass = _interopRequireDefault(require("./services/renderer/passes/PixelPickingPass"));
var _PostProcessor = _interopRequireDefault(require("./services/renderer/passes/PostProcessor"));
var _RenderPass = _interopRequireDefault(require("./services/renderer/passes/RenderPass"));
var _BloomPass = _interopRequireDefault(require("./services/renderer/passes/post-processing/BloomPass"));
var _BlurHPass = _interopRequireDefault(require("./services/renderer/passes/post-processing/BlurHPass"));
var _BlurVPass = _interopRequireDefault(require("./services/renderer/passes/post-processing/BlurVPass"));
var _ColorHalfTonePass = _interopRequireDefault(require("./services/renderer/passes/post-processing/ColorHalfTonePass"));
var _CopyPass = _interopRequireDefault(require("./services/renderer/passes/post-processing/CopyPass"));
var _HexagonalPixelatePass = _interopRequireDefault(require("./services/renderer/passes/post-processing/HexagonalPixelatePass"));
var _InkPass = _interopRequireDefault(require("./services/renderer/passes/post-processing/InkPass"));
var _NoisePass = _interopRequireDefault(require("./services/renderer/passes/post-processing/NoisePass"));
var _SepiaPass = _interopRequireDefault(require("./services/renderer/passes/post-processing/SepiaPass"));
/** Service interfaces */

/** Service implements */

/** PostProcessing passes */

const globalConfigService = exports.globalConfigService = new _ConfigService.default();
let sceneIdCounter = 0;
function createSceneContainer() {
  const shaderModuleService = new _ShaderModuleService.default();
  const debugService = new _DebugService.default();
  const cameraService = new _CameraService.default();
  const coordinateSystemService = new _CoordinateSystemService.default(cameraService);
  const fontService = new _FontService.default();
  const iconService = new _IconService.default();
  const markerService = new _MarkerService.default();
  const popupService = new _PopupService.default();
  const controlService = new _ControlService.default();

  // @ts-ignore
  const container = {
    id: `${sceneIdCounter++}`,
    globalConfigService,
    shaderModuleService,
    debugService,
    cameraService,
    coordinateSystemService,
    fontService,
    iconService,
    markerService,
    popupService,
    controlService,
    customRenderService: {}
  };

  // lazy binding
  const layerService = new _LayerService.default(container);
  container.layerService = layerService;
  const sceneService = new _SceneService.default(container);
  container.sceneService = sceneService;
  const interactionService = new _InteractionService.default(container);
  container.interactionService = interactionService;
  const pickingService = new _PickingService.default(container);
  container.pickingService = pickingService;
  const normalPass = {
    clear: new _ClearPass.default(),
    pixelPicking: new _PixelPickingPass.default(),
    render: new _RenderPass.default()
  };
  container.normalPassFactory = named => {
    return normalPass[named];
  };
  const postProcessingPass = {
    copy: new _CopyPass.default(),
    bloom: new _BloomPass.default(),
    blurH: new _BlurHPass.default(),
    blurV: new _BlurVPass.default(),
    noise: new _NoisePass.default(),
    sepia: new _SepiaPass.default(),
    colorHalftone: new _ColorHalfTonePass.default(),
    hexagonalPixelate: new _HexagonalPixelatePass.default(),
    ink: new _InkPass.default()
  };
  container.postProcessingPass = postProcessingPass;
  container.postProcessingPassFactory = named => {
    return postProcessingPass[named];
  };
  return container;
}
function createLayerContainer(sceneContainer) {
  const layerContainer = (0, _objectSpread2.default)({}, sceneContainer);
  layerContainer.postProcessor = new _PostProcessor.default(layerContainer.rendererService);
  layerContainer.multiPassRenderer = new _MultiPassRenderer.default(layerContainer.postProcessor);
  layerContainer.styleAttributeService = new _StyleAttributeService.default(layerContainer.rendererService);
  return layerContainer;
}