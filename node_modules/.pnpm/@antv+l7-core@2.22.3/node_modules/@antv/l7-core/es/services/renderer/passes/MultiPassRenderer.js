import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { PassType } from "../IMultiPassRenderer";

/**
 * ported from Three.js EffectComposer
 * @example
 * const renderer = new MultiPassRenderer([
 *   new ClearPass(),
 *   new RenderPass({
 *     models: [
 *       new Model(),
 *       new Model(),
 *     ],
 *   }),
 *   new CopyPass({
 *     renderToScreen: true,
 *   }),
 *   new TAAPass(),
 * ]);
 * renderer.render();
 * @see https://yuque.antfin-inc.com/yuqi.pyq/fgetpa/apuvbf#dRM8W
 */
export default class MultiPassRenderer {
  constructor(postProcessor) {
    _defineProperty(this, "passes", []);
    _defineProperty(this, "layer", void 0);
    _defineProperty(this, "renderFlag", void 0);
    _defineProperty(this, "width", 0);
    _defineProperty(this, "height", 0);
    this.postProcessor = postProcessor;
  }
  setLayer(layer) {
    this.layer = layer;
  }
  setRenderFlag(renderFlag) {
    this.renderFlag = renderFlag;
  }
  getRenderFlag() {
    return this.renderFlag;
  }
  getPostProcessor() {
    return this.postProcessor;
  }
  render() {
    var _this = this;
    return _asyncToGenerator(function* () {
      for (const pass of _this.passes) {
        yield pass.render(_this.layer);
      }
      // this.layer.renderModels();
      yield _this.postProcessor.render(_this.layer);
    })();
  }
  resize(width, height) {
    if (this.width !== width || this.height !== height) {
      this.postProcessor.resize(width, height);
      this.width = width;
      this.height = height;
    }
  }
  add(pass, config) {
    if (pass.getType() === PassType.PostProcessing) {
      this.postProcessor.add(pass, this.layer, config);
    } else {
      pass.init(this.layer, config);
      this.passes.push(pass);
    }
  }
  insert(pass, config, index) {
    pass.init(this.layer, config);
    this.passes.splice(index, 0, pass);
  }
  destroy() {
    this.passes.length = 0;
  }
}