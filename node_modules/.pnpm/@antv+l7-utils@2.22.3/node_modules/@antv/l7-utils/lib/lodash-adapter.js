var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/lodash-adapter.ts
var lodash_adapter_exports = {};
__export(lodash_adapter_exports, {
  lodashUtil: () => lodashUtil
});
module.exports = __toCommonJS(lodash_adapter_exports);
var import_clamp = __toESM(require("lodash/clamp"));
var import_cloneDeep = __toESM(require("lodash/cloneDeep"));
var import_debounce = __toESM(require("lodash/debounce"));
var import_get = __toESM(require("lodash/get"));
var import_isBoolean = __toESM(require("lodash/isBoolean"));
var import_isEqual = __toESM(require("lodash/isEqual"));
var import_isNil = __toESM(require("lodash/isNil"));
var import_isNumber = __toESM(require("lodash/isNumber"));
var import_isPlainObject = __toESM(require("lodash/isPlainObject"));
var import_isString = __toESM(require("lodash/isString"));
var import_isTypedArray = __toESM(require("lodash/isTypedArray"));
var import_merge = __toESM(require("lodash/merge"));
var import_mergeWith = __toESM(require("lodash/mergeWith"));
var import_pull = __toESM(require("lodash/pull"));
var import_throttle = __toESM(require("lodash/throttle"));
var import_uniq = __toESM(require("lodash/uniq"));
var import_upperFirst = __toESM(require("lodash/upperFirst"));
var import_isFunction = __toESM(require("lodash/isFunction"));
var import_isObject = __toESM(require("lodash/isObject"));
var import_isUndefined = __toESM(require("lodash/isUndefined"));
var import_camelCase = __toESM(require("lodash/camelCase"));
var import_uniqueId = __toESM(require("lodash/uniqueId"));
var lodashUtil = {
  isNil: import_isNil.default,
  merge: import_merge.default,
  throttle: import_throttle.default,
  isString: import_isString.default,
  debounce: import_debounce.default,
  pull: import_pull.default,
  isTypedArray: import_isTypedArray.default,
  isPlainObject: import_isPlainObject.default,
  isNumber: import_isNumber.default,
  isBoolean: import_isBoolean.default,
  isEqual: import_isEqual.default,
  cloneDeep: import_cloneDeep.default,
  uniq: import_uniq.default,
  clamp: import_clamp.default,
  upperFirst: import_upperFirst.default,
  get: import_get.default,
  mergeWith: import_mergeWith.default,
  isFunction: import_isFunction.default,
  isObject: import_isObject.default,
  isUndefined: import_isUndefined.default,
  camelCase: import_camelCase.default,
  uniqueId: import_uniqueId.default
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  lodashUtil
});
