import { DragHandler } from "./drag_handler";
import { OneFingerTouchMoveStateManager } from "./drag_move_state_manager";
const assignEvents = handler => {
  handler.touchstart = handler.dragStart;
  handler.touchmoveWindow = handler.dragMove;
  handler.touchend = handler.dragEnd;
};
export const generateOneFingerTouchRotationHandler = ({
  enable,
  clickTolerance,
  bearingDegreesPerPixelMoved = 0.8
}) => {
  const touchMoveStateManager = new OneFingerTouchMoveStateManager();
  return new DragHandler({
    clickTolerance,
    move: (lastPoint, point) => ({
      bearingDelta: (point.x - lastPoint.x) * bearingDegreesPerPixelMoved
    }),
    moveStateManager: touchMoveStateManager,
    enable,
    assignEvents
  });
};
export const generateOneFingerTouchPitchHandler = ({
  enable,
  clickTolerance,
  pitchDegreesPerPixelMoved = -0.5
}) => {
  const touchMoveStateManager = new OneFingerTouchMoveStateManager();
  return new DragHandler({
    clickTolerance,
    move: (lastPoint, point) => ({
      pitchDelta: (point.y - lastPoint.y) * pitchDegreesPerPixelMoved
    }),
    moveStateManager: touchMoveStateManager,
    enable,
    assignEvents
  });
};