import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
/**
 * Options object for `DragRotateHandler`.
 */

/**
 * The `DragRotateHandler` allows the user to rotate the map by clicking and
 * dragging the cursor while holding the right mouse button or `ctrl` key.
 *
 * @group Handlers
 */
export class DragRotateHandler {
  /** @internal */
  constructor(options, mouseRotate, mousePitch) {
    _defineProperty(this, "_mouseRotate", void 0);
    _defineProperty(this, "_mousePitch", void 0);
    _defineProperty(this, "_pitchWithRotate", void 0);
    this._pitchWithRotate = options.pitchWithRotate;
    this._mouseRotate = mouseRotate;
    this._mousePitch = mousePitch;
  }

  /**
   * Enables the "drag to rotate" interaction.
   *
   * @example
   * ```ts
   * map.dragRotate.enable();
   * ```
   */
  enable() {
    this._mouseRotate.enable();
    if (this._pitchWithRotate) this._mousePitch.enable();
  }

  /**
   * Disables the "drag to rotate" interaction.
   *
   * @example
   * ```ts
   * map.dragRotate.disable();
   * ```
   */
  disable() {
    this._mouseRotate.disable();
    this._mousePitch.disable();
  }

  /**
   * Returns a Boolean indicating whether the "drag to rotate" interaction is enabled.
   *
   * @returns `true` if the "drag to rotate" interaction is enabled.
   */
  isEnabled() {
    return this._mouseRotate.isEnabled() && (!this._pitchWithRotate || this._mousePitch.isEnabled());
  }

  /**
   * Returns a Boolean indicating whether the "drag to rotate" interaction is active, i.e. currently being used.
   *
   * @returns `true` if the "drag to rotate" interaction is active.
   */
  isActive() {
    return this._mouseRotate.isActive() || this._mousePitch.isActive();
  }
}