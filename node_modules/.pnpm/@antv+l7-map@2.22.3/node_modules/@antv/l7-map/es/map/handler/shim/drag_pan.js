import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
/**
 * A {@link DragPanHandler} options object
 */

/**
 * The `DragPanHandler` allows the user to pan the map by clicking and dragging
 * the cursor.
 *
 * @group Handlers
 */
export class DragPanHandler {
  /** @internal */
  constructor(el, mousePan, touchPan) {
    _defineProperty(this, "_el", void 0);
    _defineProperty(this, "_mousePan", void 0);
    _defineProperty(this, "_touchPan", void 0);
    _defineProperty(this, "_inertiaOptions", void 0);
    this._el = el;
    this._mousePan = mousePan;
    this._touchPan = touchPan;
  }

  /**
   * Enables the "drag to pan" interaction.
   *
   * @param options - Options object
   * @example
   * ```ts
   *   map.dragPan.enable();
   *   map.dragPan.enable({
   *      linearity: 0.3,
   *      easing: bezier(0, 0, 0.3, 1),
   *      maxSpeed: 1400,
   *      deceleration: 2500,
   *   });
   * ```
   */
  enable(options) {
    this._inertiaOptions = options || {};
    this._mousePan.enable();
    this._touchPan.enable();
    this._el.classList.add('l7-touch-drag-pan');
  }

  /**
   * Disables the "drag to pan" interaction.
   *
   * @example
   * ```ts
   * map.dragPan.disable();
   * ```
   */
  disable() {
    this._mousePan.disable();
    this._touchPan.disable();
    this._el.classList.remove('l7-touch-drag-pan');
  }

  /**
   * Returns a Boolean indicating whether the "drag to pan" interaction is enabled.
   *
   * @returns `true` if the "drag to pan" interaction is enabled.
   */
  isEnabled() {
    return this._mousePan.isEnabled() && this._touchPan.isEnabled();
  }

  /**
   * Returns a Boolean indicating whether the "drag to pan" interaction is active, i.e. currently being used.
   *
   * @returns `true` if the "drag to pan" interaction is active.
   */
  isActive() {
    return this._mousePan.isActive() || this._touchPan.isActive();
  }
}