"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.browser = void 0;
var _abort_error = require("./abort_error");
const now = typeof performance !== 'undefined' && performance && performance.now ? performance.now.bind(performance) : Date.now.bind(Date);
let reducedMotionQuery;

/** */
const browser = exports.browser = {
  /**
   * Provides a function that outputs milliseconds: either performance.now()
   * or a fallback to Date.now()
   */
  now,
  frameAsync(abortController) {
    return new Promise((resolve, reject) => {
      const frame = requestAnimationFrame(resolve);
      abortController.signal.addEventListener('abort', () => {
        cancelAnimationFrame(frame);
        reject((0, _abort_error.createAbortError)());
      });
    });
  },
  get prefersReducedMotion() {
    // In case your test crashes when checking matchMedia, call setMatchMedia from 'src/util/test/util'
    if (!window.matchMedia) return false;
    //Lazily initialize media query
    if (reducedMotionQuery == null) {
      reducedMotionQuery = window.matchMedia('(prefers-reduced-motion: reduce)');
    }
    return reducedMotionQuery.matches;
  }
};