import { AxiosInstance } from 'axios';
import { AxiosPromise } from 'axios';
import { AxiosRequestConfig } from 'axios';
import dayjs from 'dayjs';
import { Worksheet } from 'exceljs';

export declare type BscaFilterData<T extends Record<string, any>> = Required<PaginationParams> & T;

export declare type BscaPromise<T = any> = AxiosPromise<BscaResponse<T>>;

export declare interface BscaResponse<T = any> {
    result: boolean;
    message?: string;
    path?: string;
    status: number;
    timestamp: number;
    data: {
        value: T;
        count?: number;
    };
}

export declare function createRequest(config?: AxiosRequestConfig): Request_2;

export declare interface ExcelField {
    /** 表头名 */
    header: string;
    /** 字段索引 */
    dataIndex: string;
}

export declare interface ExcelFieldExport<T> extends ExcelField {
    /** 字段类型：index为索引 */
    type?: 'default' | 'index';
    /** 取值方法，用于复杂计算的取值 */
    computeMethod?: (value: any, row?: T) => string;
}

export declare type ExcelRawData = Record<string, any>;

/**
 * 导出json为excel并下载
 * @param rawData - 原始数据
 * @param fields - 字段配置
 * @param filename - 导出文件名
 * @param option - exceljs配置，目前没有用
 * @param formatter - exceljs 的 formatter
 */
export declare function exportJsonToExcel<T extends ExcelRawData>(rawData: T[], fields: ExcelFieldExport<T>[], filename?: string, option?: {}, formatter?: (worksheet: Worksheet) => void): Promise<void>;

/**
 * 获取一个html元素的绝对坐标[x, y]
 */
export declare function getElementPosition(element: HTMLElement): [number, number];

/**
 * 导入excel为json
 * @param file - input的原始文件
 */
export declare function importExcelToJson(file: File): Promise<string[][]>;

export declare interface PaginationParams {
    page: number;
    rows?: number;
}

declare class Request_2 {
    axios: AxiosInstance;
    constructor(config?: AxiosRequestConfig);
    private init;
    private parseUrlString;
    /** 生成 baseUrl */
    private getModelBaseUrl;
    private doRequest;
    /** 获取实体 */
    getModel<T = any>(baseUrl: string, module: string, name: string, type: 'list', params: PaginationParams): BscaPromise<T[]>;
    getModel<T = any>(baseUrl: string, module: string, name: string, type: 'detail', params?: any): BscaPromise<T>;
    postModel<T = any>(baseUrl: string, module: string, name: string, type: 'post', data: T): BscaPromise<string>;
    patchModel<T = any>(baseUrl: string, module: string, name: string, type: 'patch', data: T): BscaPromise<string>;
    deleteModel<T = never>(baseUrl: string, module: string, name: string, type: 'delete', params: any): BscaPromise<string>;
    filterModel<T = any, D extends Record<string, any> = {}>(baseUrl: string, module: string, name: string, params: BscaFilterData<D>): BscaPromise<T[]>;
}
export { Request_2 as Request }

/**
 * 格式化时间，默认为datetime
 */
export declare function timeFormat(time: dayjs.ConfigType, type?: TimeFormatType): string;

export declare type TimeFormatType = 'date' | 'datetime' | 'time' | 'datetimeNS' | 'timeNS';

export { }
