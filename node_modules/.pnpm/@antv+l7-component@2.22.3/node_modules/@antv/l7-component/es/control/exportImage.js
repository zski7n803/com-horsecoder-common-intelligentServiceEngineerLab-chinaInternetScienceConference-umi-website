import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { createL7Icon } from "../utils/icon";
import ButtonControl from "./baseControl/buttonControl";
export { ExportImage };
export default class ExportImage extends ButtonControl {
  constructor(...args) {
    var _this;
    super(...args);
    _this = this;
    _defineProperty(this, "onClick", /*#__PURE__*/_asyncToGenerator(function* () {
      const {
        onExport
      } = _this.controlOption;
      onExport === null || onExport === void 0 || onExport(yield _this.getImage());
    }));
    /**
     * 将多张图片合并为一张图片
     * @protected
     * @param base64List
     */
    _defineProperty(this, "mergeImage", /*#__PURE__*/_asyncToGenerator(function* (...base64List) {
      var _this$mapsService$get, _this$mapsService$get2;
      const {
        imageType
      } = _this.controlOption;
      const {
        width = 0,
        height = 0
      } = (_this$mapsService$get = (_this$mapsService$get2 = _this.mapsService.getContainer()) === null || _this$mapsService$get2 === void 0 ? void 0 : _this$mapsService$get2.getBoundingClientRect()) !== null && _this$mapsService$get !== void 0 ? _this$mapsService$get : {};
      const canvas = document.createElement('canvas');
      canvas.width = width;
      canvas.height = height;
      const context = canvas.getContext('2d');
      const imgList = yield Promise.all(base64List.map(base64 => {
        return new Promise(resolve => {
          const img = new Image();
          img.onload = () => {
            resolve(img);
          };
          img.src = base64;
        });
      }));
      imgList.forEach(img => {
        context === null || context === void 0 || context.drawImage(img, 0, 0, width, height);
      });
      return canvas.toDataURL(`image/${imageType}`);
    }));
  }
  onAdd() {
    const button = super.onAdd();
    button.addEventListener('click', this.onClick);
    return button;
  }
  getDefault(option) {
    return _objectSpread(_objectSpread({}, super.getDefault(option)), {}, {
      title: '导出图片',
      btnIcon: createL7Icon('l7-icon-export-picture'),
      imageType: 'png'
    });
  }
  getImage() {
    var _this2 = this;
    return _asyncToGenerator(function* () {
      const mapImage = yield _this2.mapsService.exportMap('png');
      const layerImage = yield _this2.scene.exportPng('png');
      return _this2.mergeImage(
      // 在 Map 底图模式下 mapImage 为 undefined
      ...[mapImage, layerImage].filter(base64 => base64));
    })();
  }
}