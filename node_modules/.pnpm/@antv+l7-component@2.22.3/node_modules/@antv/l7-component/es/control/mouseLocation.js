import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { PositionType } from '@antv/l7-core';
import { DOM } from '@antv/l7-utils';
import Control from "./baseControl/control";
export { MouseLocation };
export default class MouseLocation extends Control {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "location", [0, 0]);
    _defineProperty(this, "onMouseMove", e => {
      let position = this.location;
      // 适配不同底图，事件返回的数据名称不一致
      const lngLat = e.lngLat || e.lnglat;
      const {
        transform
      } = this.controlOption;
      if (lngLat) {
        position = [lngLat.lng, lngLat.lat];
      }
      this.location = position;
      if (transform) {
        position = transform(position);
      }
      this.insertLocation2HTML(position);
      this.emit('locationChange', position);
    });
  }
  getLocation() {
    return this.location;
  }
  getDefault(option) {
    return _objectSpread(_objectSpread({}, super.getDefault(option)), {}, {
      position: PositionType.BOTTOMLEFT,
      transform: ([lng, lat]) => {
        return [+(+lng).toFixed(6), +(+lat).toFixed(6)];
      }
    });
  }
  onAdd() {
    const container = DOM.create('div', 'l7-control-mouse-location');
    container.innerHTML = '&nbsp;';
    this.mapsService.on('mousemove', this.onMouseMove);
    return container;
  }
  onRemove() {
    this.mapsService.off('mousemove', this.onMouseMove);
  }
  insertLocation2HTML(position) {
    this.container.innerText = position.join(', ');
  }
}