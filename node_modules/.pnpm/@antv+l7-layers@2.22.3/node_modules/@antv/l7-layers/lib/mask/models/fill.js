"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _l7Utils = require("@antv/l7-utils");
var _BaseModel = _interopRequireDefault(require("../../core/BaseModel"));
var _triangulation = require("../../core/triangulation");
/* babel-plugin-inline-import '../../shader/minify_frag.glsl' */
const mask_frag = "layout(std140) uniform commonUniorm {\n  vec4 u_color;\n  float u_opacity;\n};\n\nout vec4 outputColor;\n\nvoid main() {\n  outputColor = u_color;\n  outputColor.a *= u_opacity;\n}\n";
/* babel-plugin-inline-import '../shaders/mask_vert.glsl' */
const mask_vert = "layout(location = ATTRIBUTE_LOCATION_POSITION) in vec3 a_Position;\n\nlayout(std140) uniform commonUniorm {\n  vec4 u_color;\n  float u_opacity;\n};\n\n#pragma include \"projection\"\n\nvoid main() {\n  vec4 project_pos = project_position(vec4(a_Position, 1.0));\n  gl_Position = project_common_position_to_clipspace(vec4(project_pos.xyz, 1.0));\n}\n\n";
class MaskModel extends _BaseModel.default {
  getUninforms() {
    const commoninfo = this.getCommonUniformsInfo();
    const attributeInfo = this.getUniformsBufferInfo(this.getStyleAttribute());
    this.updateStyleUnifoms();
    return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, commoninfo.uniformsOption), attributeInfo.uniformsOption);
  }
  getCommonUniformsInfo() {
    const {
      opacity = 1,
      color = '#000'
    } = this.layer.getLayerConfig();
    const commonOptions = {
      u_color: (0, _l7Utils.rgb2arr)(color),
      u_opacity: opacity || 1
    };
    const commonBufferInfo = this.getUniformsBufferInfo(commonOptions);
    return commonBufferInfo;
  }
  initModels() {
    var _this = this;
    return (0, _asyncToGenerator2.default)(function* () {
      return _this.buildModels();
    })();
  }
  buildModels() {
    var _this2 = this;
    return (0, _asyncToGenerator2.default)(function* () {
      _this2.initUniformsBuffer();
      const model = yield _this2.layer.buildLayerModel({
        moduleName: 'mask',
        vertexShader: mask_vert,
        fragmentShader: mask_frag,
        defines: _this2.getDefines(),
        triangulation: _triangulation.polygonTriangulation,
        depth: {
          enable: false
        },
        pick: false
      });
      return [model];
    })();
  }
  clearModels(refresh = true) {
    if (refresh) {
      this.layerService.clear();
    }
  }
  registerBuiltinAttributes() {
    return '';
  }
}
exports.default = MaskModel;