"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _mask = _interopRequireDefault(require("../../mask"));
var _Tile = _interopRequireDefault(require("./Tile"));
class MaskTile extends _Tile.default {
  initTileLayer() {
    var _this = this;
    return (0, _asyncToGenerator2.default)(function* () {
      const attributes = _this.parent.getLayerAttributeConfig();
      const layerOptions = _this.getLayerOptions();
      const sourceOptions = _this.getSourceOption();
      const layer = new _mask.default((0, _objectSpread2.default)({}, layerOptions)).source(sourceOptions.data, sourceOptions.options);

      // 初始化数据映射
      // tslint:disable-next-line: no-unused-expression
      attributes && Object.keys(attributes).forEach(type => {
        var _attributes$attr, _attributes$attr2;
        const attr = type;
        // @ts-ignore
        layer[attr]((_attributes$attr = attributes[attr]) === null || _attributes$attr === void 0 ? void 0 : _attributes$attr.field, (_attributes$attr2 = attributes[attr]) === null || _attributes$attr2 === void 0 ? void 0 : _attributes$attr2.values);
      });
      yield _this.addLayer(layer);
      _this.isLoaded = true;
    })();
  }
  getFeatures(sourceLayer) {
    if (!sourceLayer) {
      return [];
    }
    const source = this.sourceTile.data;
    return source.getTileData(sourceLayer);
  }
  getSourceOption() {
    const rawSource = this.parent.getSource();
    const {
      sourceLayer,
      featureId
    } = this.parent.getLayerConfig();
    const features = this.getFeatures(sourceLayer);
    return {
      data: {
        type: 'FeatureCollection',
        features
      },
      options: {
        parser: {
          type: 'geojson',
          featureId
        },
        transforms: rawSource.transforms
      }
    };
  }
}
exports.default = MaskTile;