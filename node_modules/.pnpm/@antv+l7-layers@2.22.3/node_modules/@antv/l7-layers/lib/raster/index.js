"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _BaseLayer = _interopRequireDefault(require("../core/BaseLayer"));
var _rampcolor_legend = require("../utils/rampcolor_legend");
var _index = _interopRequireDefault(require("./models/index"));
class RasterLayer extends _BaseLayer.default {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "type", 'RasterLayer');
  }
  buildModels() {
    var _this = this;
    return (0, _asyncToGenerator2.default)(function* () {
      const modelType = _this.getModelType();
      _this.layerModel = new _index.default[modelType](_this);
      yield _this.initLayerModels();
    })();
  }
  getDefaultConfig() {
    const type = this.getModelType();
    const defaultConfig = {
      raster: {},
      rasterRgb: {},
      raster3d: {},
      rasterTerrainRgb: {}
    };
    return defaultConfig[type];
  }
  getModelType() {
    // 根据 source 的类型判断 model type
    const parserType = this.layerSource.getParserType();
    switch (parserType) {
      case 'raster' || 'ndi':
        return 'raster';
      case 'rasterRgb':
        return 'rasterRgb';
      case 'rgb':
        return 'rasterRgb';
      case 'image':
        return 'rasterTerrainRgb';
      default:
        return 'raster';
    }
  }
  getLegend(name) {
    if (name !== 'color') return {
      type: undefined,
      field: undefined,
      items: []
    };
    const rampColors = this.getLayerConfig().rampColors;
    return (0, _rampcolor_legend.rampColor2legend)(rampColors, name);
  }
}
exports.default = RasterLayer;