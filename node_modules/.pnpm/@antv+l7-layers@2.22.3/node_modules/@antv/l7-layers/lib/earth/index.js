"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _BaseLayer = _interopRequireDefault(require("../core/BaseLayer"));
var _atmosphere = _interopRequireDefault(require("./models/atmosphere"));
var _base = _interopRequireDefault(require("./models/base"));
var _bloomsphere = _interopRequireDefault(require("./models/bloomsphere"));
const EarthModels = {
  base: _base.default,
  atomSphere: _atmosphere.default,
  bloomSphere: _bloomsphere.default
};
const earthLayerTypes = ['base', 'atomSphere', 'bloomSphere'];
class EarthLayer extends _BaseLayer.default {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "type", 'EarthLayer');
    (0, _defineProperty2.default)(this, "defaultSourceConfig", {
      data: [],
      options: {
        parser: {
          type: 'json'
        }
      }
    });
  }
  buildModels() {
    var _this = this;
    return (0, _asyncToGenerator2.default)(function* () {
      const shape = _this.getModelType();
      _this.layerModel = new EarthModels[shape](_this);
      yield _this.initLayerModels();
    })();
  }

  /**
   * 设置当前地球时间
   * @param time
   */
  setEarthTime(time) {
    if (this.layerModel && this.layerModel.setEarthTime) {
      this.layerModel.setEarthTime(time);
    } else {
      console.warn('请在 scene loaded 之后执行该方法！');
    }
  }
  getModelType() {
    var _shapeAttribute$scale;
    const shapeAttribute = this.styleAttributeService.getLayerStyleAttribute('shape');
    let shape = (shapeAttribute === null || shapeAttribute === void 0 || (_shapeAttribute$scale = shapeAttribute.scale) === null || _shapeAttribute$scale === void 0 ? void 0 : _shapeAttribute$scale.field) || 'base';
    if (earthLayerTypes.indexOf(shape) < 0) {
      shape = 'base';
    }
    return shape;
  }
}
exports.default = EarthLayer;