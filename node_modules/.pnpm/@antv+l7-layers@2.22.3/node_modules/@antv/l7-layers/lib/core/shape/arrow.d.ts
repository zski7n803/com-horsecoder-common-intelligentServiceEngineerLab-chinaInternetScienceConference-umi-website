import type { ArrowType, IArrowOptions, ILineSymbol } from '../interface';
export interface IArrowData {
    vertices: number[];
    indices: number[];
    outLineIndices: number[];
    dimensions: number;
    offset?: number[];
    normals: number[];
}
export type arrowPosition = -1 | 1;
export declare function halfTriangleArrow(dir: arrowPosition, options: IArrowOptions): IArrowData;
export declare function triangleArrow(dir: arrowPosition, options: IArrowOptions): IArrowData;
export declare function rectArrow(dir: arrowPosition, options: IArrowOptions): IArrowData;
export declare function diamondArrow(dir: arrowPosition, options: IArrowOptions): IArrowData;
export declare function classicArrow(dir: arrowPosition, options: IArrowOptions): IArrowData;
export declare function circleArraw(dir: arrowPosition, options: IArrowOptions): IArrowData;
export declare function lineArrowPath(coord: number[], indexOffset: number | undefined, symbol: ILineSymbol): IArrowData;
export declare function getSymbol(type: ArrowType | IArrowOptions, position: 'source' | 'target'): IArrowData | {
    vertices: never[];
    indices: never[];
    normals: never[];
    dimensions: number;
    outLineIndices: never[];
    outLineNormals: never[];
};
