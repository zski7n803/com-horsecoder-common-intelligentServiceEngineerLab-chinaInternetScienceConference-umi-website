import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import ImageLayer from "../../image";
import Tile from "./Tile";
export default class ImageTile extends Tile {
  initTileLayer() {
    var _this = this;
    return _asyncToGenerator(function* () {
      const attributes = _this.parent.getLayerAttributeConfig();
      const layerOptions = _this.getLayerOptions();
      const sourceOptions = _this.getSourceOption();
      const layer = new ImageLayer(_objectSpread({}, layerOptions)).source(sourceOptions.data, sourceOptions.options);

      // 初始化数据映射
      // tslint:disable-next-line: no-unused-expression
      attributes && Object.keys(attributes).forEach(type => {
        var _attributes$attr, _attributes$attr2;
        const attr = type;
        // @ts-ignore
        layer[attr]((_attributes$attr = attributes[attr]) === null || _attributes$attr === void 0 ? void 0 : _attributes$attr.field, (_attributes$attr2 = attributes[attr]) === null || _attributes$attr2 === void 0 ? void 0 : _attributes$attr2.values);
      });
      yield _this.addLayer(layer);
      _this.isLoaded = true;
    })();
  }
  getSourceOption() {
    const rawSource = this.parent.getSource();
    return {
      data: this.sourceTile.data,
      options: {
        parser: {
          type: 'image',
          extent: this.sourceTile.bounds
        },
        transforms: rawSource.transforms
      }
    };
  }
}