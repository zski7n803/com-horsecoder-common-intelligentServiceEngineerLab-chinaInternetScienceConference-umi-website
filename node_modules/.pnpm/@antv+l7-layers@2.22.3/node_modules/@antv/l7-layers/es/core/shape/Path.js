export let ShapeType3D = /*#__PURE__*/function (ShapeType3D) {
  ShapeType3D["CYLINDER"] = "cylinder";
  ShapeType3D["SQUARECOLUMN"] = "squareColumn";
  ShapeType3D["TRIANGLECOLUMN"] = "triangleColumn";
  ShapeType3D["HEXAGONCOLUMN"] = "hexagonColumn";
  ShapeType3D["PENTAGONCOLUMN"] = "pentagonColumn";
  return ShapeType3D;
}({});
export let ShapeType2D = /*#__PURE__*/function (ShapeType2D) {
  ShapeType2D["CIRCLE"] = "circle";
  ShapeType2D["SQUARE"] = "square";
  ShapeType2D["TRIANGLE"] = "triangle";
  ShapeType2D["HEXAGON"] = "hexagon";
  ShapeType2D["PENTAGON"] = "pentagon";
  return ShapeType2D;
}({});

/**
 * 生成规则多边形顶点个数
 * @param pointCount  顶点个数 3 => 三角形
 * @param start 顶点起始角度 调整图形的方向
 */
export function polygonPath(pointCount, start = 0) {
  const step = Math.PI * 2 / pointCount;
  const line = [];
  for (let i = 0; i < pointCount; i++) {
    line.push(step * i + start * Math.PI / 12);
  }
  const path = line.map(t => {
    const x = Math.sin(t + Math.PI / 4);
    const y = Math.cos(t + Math.PI / 4);
    return [x, y, 0];
  });
  // path.push(path[0]);
  return path;
}
export function circle() {
  return polygonPath(30);
}
export function square() {
  return polygonPath(4);
}
export function triangle() {
  return polygonPath(3);
}
export function hexagon() {
  return polygonPath(6, 1);
}
export function pentagon() {
  return polygonPath(5);
}
export const geometryShape = {
  [ShapeType2D.CIRCLE]: circle,
  [ShapeType2D.HEXAGON]: hexagon,
  [ShapeType2D.TRIANGLE]: triangle,
  [ShapeType2D.SQUARE]: square,
  [ShapeType2D.PENTAGON]: pentagon,
  [ShapeType3D.CYLINDER]: circle,
  [ShapeType3D.HEXAGONCOLUMN]: hexagon,
  [ShapeType3D.TRIANGLECOLUMN]: triangle,
  [ShapeType3D.SQUARECOLUMN]: square,
  [ShapeType3D.PENTAGONCOLUMN]: pentagon
};