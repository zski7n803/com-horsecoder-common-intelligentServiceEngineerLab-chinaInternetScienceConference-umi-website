import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import BaseLayer from "../core/BaseLayer";
import { rampColor2legend } from "../utils/rampcolor_legend";
import RasterModels from "./models/index";
export default class RasterLayer extends BaseLayer {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "type", 'RasterLayer');
  }
  buildModels() {
    var _this = this;
    return _asyncToGenerator(function* () {
      const modelType = _this.getModelType();
      _this.layerModel = new RasterModels[modelType](_this);
      yield _this.initLayerModels();
    })();
  }
  getDefaultConfig() {
    const type = this.getModelType();
    const defaultConfig = {
      raster: {},
      rasterRgb: {},
      raster3d: {},
      rasterTerrainRgb: {}
    };
    return defaultConfig[type];
  }
  getModelType() {
    // 根据 source 的类型判断 model type
    const parserType = this.layerSource.getParserType();
    switch (parserType) {
      case 'raster' || 'ndi':
        return 'raster';
      case 'rasterRgb':
        return 'rasterRgb';
      case 'rgb':
        return 'rasterRgb';
      case 'image':
        return 'rasterTerrainRgb';
      default:
        return 'raster';
    }
  }
  getLegend(name) {
    if (name !== 'color') return {
      type: undefined,
      field: undefined,
      items: []
    };
    const rampColors = this.getLayerConfig().rampColors;
    return rampColor2legend(rampColors, name);
  }
}