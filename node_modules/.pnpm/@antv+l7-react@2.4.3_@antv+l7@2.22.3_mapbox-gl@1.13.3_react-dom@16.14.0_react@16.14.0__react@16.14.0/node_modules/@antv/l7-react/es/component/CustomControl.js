function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
import { Control } from '@antv/l7';
import * as React from 'react';
import { createPortal } from 'react-dom';
import { useSceneValue } from './SceneContext';
var useEffect = React.useEffect,
  useState = React.useState;
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = function hyphenate(str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase();
};
export default function CustomControl(props) {
  var className = props.className,
    style = props.style,
    children = props.children,
    position = props.position;
  var _useState = useState(),
    _useState2 = _slicedToArray(_useState, 2),
    control = _useState2[0],
    setControl = _useState2[1];
  var mapScene = useSceneValue();
  var _useState3 = useState(function () {
      return document.createElement('div');
    }),
    _useState4 = _slicedToArray(_useState3, 1),
    el = _useState4[0];
  useEffect(function () {
    var custom = new Control({
      position: position
    });
    custom.onAdd = function () {
      if (className) {
        el.className = className;
      }
      if (style) {
        var cssText = Object.keys(style).map(function (key) {
          // @ts-ignore
          return "".concat(hyphenate(key), ":").concat(style[key]);
        }).join(';');
        el.style.cssText = cssText;
      }
      return el;
    };
    custom.onRemove = function () {};
    setControl(custom);
    mapScene.addControl(custom);
    return function () {
      mapScene.removeControl(custom);
    };
  }, []);
  useEffect(function () {
    control && control.setPosition(position || 'bottomleft');
  }, [position]);
  return /*#__PURE__*/createPortal(children, el);
}