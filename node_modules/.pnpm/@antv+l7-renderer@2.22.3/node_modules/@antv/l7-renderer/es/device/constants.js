// src/device/constants.ts
import {
  AddressMode,
  BlendFactor,
  BlendMode,
  BufferFrequencyHint,
  CompareFunction,
  CullMode,
  Format,
  PrimitiveTopology,
  StencilOp
} from "@antv/g-device-api";
import { gl } from "@antv/l7-core";
var typedArrayCtorMap = {
  [gl.FLOAT]: Float32Array,
  [gl.UNSIGNED_BYTE]: Uint8Array,
  [gl.SHORT]: Int16Array,
  [gl.UNSIGNED_SHORT]: Uint16Array,
  [gl.INT]: Int32Array,
  [gl.UNSIGNED_INT]: Uint32Array
};
var primitiveMap = {
  [gl.POINTS]: PrimitiveTopology.POINTS,
  [gl.LINES]: PrimitiveTopology.LINES,
  [gl.LINE_LOOP]: PrimitiveTopology.LINES,
  [gl.LINE_STRIP]: PrimitiveTopology.LINE_STRIP,
  [gl.TRIANGLES]: PrimitiveTopology.TRIANGLES,
  [gl.TRIANGLE_FAN]: PrimitiveTopology.TRIANGLES,
  [gl.TRIANGLE_STRIP]: PrimitiveTopology.TRIANGLE_STRIP
};
var sizeFormatMap = {
  [1]: Format.F32_R,
  [2]: Format.F32_RG,
  [3]: Format.F32_RGB,
  [4]: Format.F32_RGBA
};
var hintMap = {
  [gl.STATIC_DRAW]: BufferFrequencyHint.STATIC,
  [gl.DYNAMIC_DRAW]: BufferFrequencyHint.DYNAMIC,
  [gl.STREAM_DRAW]: BufferFrequencyHint.DYNAMIC
};
var wrapModeMap = {
  [gl.REPEAT]: AddressMode.REPEAT,
  [gl.CLAMP_TO_EDGE]: AddressMode.CLAMP_TO_EDGE,
  [gl.MIRRORED_REPEAT]: AddressMode.MIRRORED_REPEAT
};
var depthFuncMap = {
  [gl.NEVER]: CompareFunction.NEVER,
  [gl.ALWAYS]: CompareFunction.ALWAYS,
  [gl.LESS]: CompareFunction.LESS,
  [gl.LEQUAL]: CompareFunction.LEQUAL,
  [gl.GREATER]: CompareFunction.GREATER,
  [gl.GEQUAL]: CompareFunction.GEQUAL,
  [gl.EQUAL]: CompareFunction.EQUAL,
  [gl.NOTEQUAL]: CompareFunction.NOTEQUAL
};
var cullFaceMap = {
  [gl.FRONT]: CullMode.FRONT,
  [gl.BACK]: CullMode.BACK
};
var blendEquationMap = {
  [gl.FUNC_ADD]: BlendMode.ADD,
  [gl.MIN_EXT]: BlendMode.MIN,
  [gl.MAX_EXT]: BlendMode.MAX,
  [gl.FUNC_SUBTRACT]: BlendMode.SUBSTRACT,
  [gl.FUNC_REVERSE_SUBTRACT]: BlendMode.REVERSE_SUBSTRACT
};
var blendFuncMap = {
  [gl.ZERO]: BlendFactor.ZERO,
  [gl.ONE]: BlendFactor.ONE,
  [gl.SRC_COLOR]: BlendFactor.SRC,
  [gl.ONE_MINUS_SRC_COLOR]: BlendFactor.ONE_MINUS_SRC,
  [gl.SRC_ALPHA]: BlendFactor.SRC_ALPHA,
  [gl.ONE_MINUS_SRC_ALPHA]: BlendFactor.ONE_MINUS_SRC_ALPHA,
  [gl.DST_COLOR]: BlendFactor.DST,
  [gl.ONE_MINUS_DST_COLOR]: BlendFactor.ONE_MINUS_DST,
  [gl.DST_ALPHA]: BlendFactor.DST_ALPHA,
  [gl.ONE_MINUS_DST_ALPHA]: BlendFactor.ONE_MINUS_DST_ALPHA,
  [gl.CONSTANT_COLOR]: BlendFactor.CONST,
  [gl.ONE_MINUS_CONSTANT_COLOR]: BlendFactor.ONE_MINUS_CONSTANT,
  [gl.CONSTANT_ALPHA]: BlendFactor.CONST,
  [gl.ONE_MINUS_CONSTANT_ALPHA]: BlendFactor.ONE_MINUS_CONSTANT,
  [gl.SRC_ALPHA_SATURATE]: BlendFactor.SRC_ALPHA_SATURATE
};
var stencilOpMap = {
  [gl.REPLACE]: StencilOp.REPLACE,
  [gl.KEEP]: StencilOp.KEEP,
  [gl.ZERO]: StencilOp.ZERO,
  [gl.INVERT]: StencilOp.INVERT,
  [gl.INCR]: StencilOp.INCREMENT_CLAMP,
  [gl.DECR]: StencilOp.DECREMENT_CLAMP,
  [gl.INCR_WRAP]: StencilOp.INCREMENT_WRAP,
  [gl.DECR_WRAP]: StencilOp.DECREMENT_WRAP
};
var stencilFuncMap = {
  [gl.ALWAYS]: CompareFunction.ALWAYS,
  [gl.EQUAL]: CompareFunction.EQUAL,
  [gl.GEQUAL]: CompareFunction.GEQUAL,
  [gl.GREATER]: CompareFunction.GREATER,
  [gl.LEQUAL]: CompareFunction.LEQUAL,
  [gl.LESS]: CompareFunction.LESS,
  [gl.NEVER]: CompareFunction.NEVER,
  [gl.NOTEQUAL]: CompareFunction.NOTEQUAL
};
export {
  blendEquationMap,
  blendFuncMap,
  cullFaceMap,
  depthFuncMap,
  hintMap,
  primitiveMap,
  sizeFormatMap,
  stencilFuncMap,
  stencilOpMap,
  typedArrayCtorMap,
  wrapModeMap
};
