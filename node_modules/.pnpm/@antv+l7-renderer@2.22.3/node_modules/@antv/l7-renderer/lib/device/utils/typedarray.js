var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/device/utils/typedarray.ts
var typedarray_exports = {};
__export(typedarray_exports, {
  extend3ChannelsTo4: () => extend3ChannelsTo4,
  isTypedArray: () => isTypedArray
});
module.exports = __toCommonJS(typedarray_exports);
var dtypes = {
  "[object Int8Array]": 5120,
  "[object Int16Array]": 5122,
  "[object Int32Array]": 5124,
  "[object Uint8Array]": 5121,
  "[object Uint8ClampedArray]": 5121,
  "[object Uint16Array]": 5123,
  "[object Uint32Array]": 5125,
  "[object Float32Array]": 5126,
  "[object Float64Array]": 5121,
  "[object ArrayBuffer]": 5121
};
function isTypedArray(x) {
  return Object.prototype.toString.call(x) in dtypes;
}
function extend3ChannelsTo4(array, valueToInsert) {
  const originalLength = array.length;
  const insertCount = Math.ceil(originalLength / 3);
  const newLength = originalLength + insertCount;
  const newArray = new Float32Array(newLength);
  for (let i = 0; i < newLength; i += 4) {
    newArray[i] = array[i / 4 * 3];
    newArray[i + 1] = array[i / 4 * 3 + 1];
    newArray[i + 2] = array[i / 4 * 3 + 2];
    newArray[i + 3] = valueToInsert;
  }
  return newArray;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  extend3ChannelsTo4,
  isTypedArray
});
