var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/parser/raster/ndi.ts
var ndi_exports = {};
__export(ndi_exports, {
  default: () => rasterRgb
});
module.exports = __toCommonJS(ndi_exports);
var import_util = require("../../utils/util");
function rasterRgb(data, cfg) {
  const _a = cfg, {
    extent = [121.168, 30.2828, 121.384, 30.4219],
    coordinates,
    width,
    height
  } = _a, options = __objRest(_a, [
    "extent",
    "coordinates",
    "width",
    "height"
  ]);
  if (data.length < 2) {
    console.warn("RGB解析需要2个波段的数据");
  }
  const [n, d] = options.bands || [0, 1];
  const bandsData = [data[n], data[d]];
  const ndidata = [];
  for (let i = 0; i < bandsData[0].length; i++) {
    ndidata.push((bandsData[1][i] - bandsData[0][i]) / (bandsData[1][i] + bandsData[0][i]));
  }
  const imageCoord = (0, import_util.extentToCoord)(coordinates, extent);
  const resultData = {
    _id: 1,
    dataArray: [
      __spreadProps(__spreadValues({
        _id: 1,
        data: ndidata,
        width,
        height
      }, options), {
        coordinates: imageCoord
      })
    ]
  };
  return resultData;
}
