var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));

// src/transform/hexagon.ts
import { Satistics, aProjectFlat } from "@antv/l7-utils";
import { hexbin } from "d3-hexbin";
var R_EARTH = 6378e3;
function pointToHexbin(data, option) {
  const dataArray = data.dataArray;
  const { size = 10, method = "sum" } = option;
  const pixlSize = size / (2 * Math.PI * R_EARTH) * (256 << 20) / 2;
  const screenPoints = dataArray.map((point) => {
    const [x, y] = aProjectFlat(point.coordinates);
    return __spreadProps(__spreadValues({}, point), {
      coordinates: [x, y]
    });
  });
  const newHexbin = hexbin().radius(pixlSize).x((d) => d.coordinates[0]).y((d) => d.coordinates[1]);
  const hexbinBins = newHexbin(screenPoints);
  const result = {
    dataArray: hexbinBins.map((hex, index) => {
      if (option.field && method) {
        const columns = Satistics.getColumn(hex, option.field);
        hex[method] = Satistics.statMap[method](columns);
      }
      return {
        [option.method]: hex[method],
        count: hex.length,
        rawData: hex,
        coordinates: [hex.x, hex.y],
        _id: index
      };
    }),
    radius: pixlSize,
    xOffset: pixlSize,
    yOffset: pixlSize,
    type: "hexagon"
  };
  return result;
}
export {
  pointToHexbin
};
