var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};

// src/transform/join.ts
function join(geoData, options) {
  const { sourceField, targetField, data } = options;
  const dataObj = {};
  data.forEach((element) => {
    dataObj[element[sourceField]] = element;
  });
  geoData.dataArray = geoData.dataArray.map((item) => {
    const joinName = item[targetField];
    return __spreadValues(__spreadValues({}, item), dataObj[joinName]);
  });
  return geoData;
}
export {
  join
};
